server:
  port: 9000
  servlet:
    context-path: /

spring:
  application:
    name: gateway-service
  profiles:
    active: test
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
    banner-mode: "off"
    lazy-initialization: false

  config:
    import:
      - optional:nacos:gateway-config.yaml

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        metadata:
          version: 1.0.0
          context-path: /
      config:
        enabled: true
        server-addr: localhost:8848
        file-extension: yaml

    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # 用户服务路由
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/v1/user/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 交易服务路由
        - id: trade-service
          uri: lb://trade-service
          predicates:
            - Path=/api/v1/trade/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 钱包服务路由
        - id: wallet-service
          uri: lb://wallet-service
          predicates:
            - Path=/api/v1/wallet/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 财务服务路由
        - id: finance-service
          uri: lb://finance-service
          predicates:
            - Path=/api/v1/finance/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 行情服务路由
        - id: market-service
          uri: lb://market-service
          predicates:
            - Path=/api/v1/market/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 风控服务路由
        - id: risk-service
          uri: lb://risk-service
          predicates:
            - Path=/api/v1/risk/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 通知服务路由
        - id: notify-service
          uri: lb://notify-service
          predicates:
            - Path=/api/v1/notify/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 撮合服务路由
        - id: match-service
          uri: lb://match-service
          predicates:
            - Path=/api/v1/match/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # OpenAPI文档聚合路由 - 为每个微服务添加文档路由
        - id: user-service-docs
          uri: lb://user-service
          predicates:
            - Path=/user-service/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: trade-service-docs
          uri: lb://trade-service
          predicates:
            - Path=/trade-service/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: wallet-service-docs
          uri: lb://wallet-service
          predicates:
            - Path=/wallet-service/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: finance-service-docs
          uri: lb://finance-service
          predicates:
            - Path=/finance-service/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: market-service-docs
          uri: lb://market-service
          predicates:
            - Path=/market-service/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: risk-service-docs
          uri: lb://risk-service
          predicates:
            - Path=/risk-service/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: notify-service-docs
          uri: lb://notify-service
          predicates:
            - Path=/notify-service/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: match-service-docs
          uri: lb://match-service
          predicates:
            - Path=/match-service/v3/api-docs/**
          filters:
            - StripPrefix=1

        # 为Knife4j发现的路径添加路由
        - id: user-service-api-docs
          uri: lb://user-service
          predicates:
            - Path=/api/v1/user/v3/api-docs/**
          filters:
            - StripPrefix=2

        - id: trade-service-api-docs
          uri: lb://trade-service
          predicates:
            - Path=/api/v1/trade/v3/api-docs/**
          filters:
            - StripPrefix=2

        - id: wallet-service-api-docs
          uri: lb://wallet-service
          predicates:
            - Path=/api/v1/wallet/v3/api-docs/**
          filters:
            - StripPrefix=2

        - id: match-service-api-docs
          uri: lb://match-service
          predicates:
            - Path=/api/v1/match/v3/api-docs/**
          filters:
            - StripPrefix=2

      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns:
              - "http://localhost:*"
              - "http://127.0.0.1:*"
              - "http://localhost:3000"
              - "http://127.0.0.1:3000"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true

  # Redis配置
  data:
    redis:
      # 连接配置
      host: localhost
      port: 6379
      password: "redis123456"
      database: 1
      username: "cex_user"

      # 连接池配置
      lettuce:
        pool:
          max-active: 200
          max-wait: -1ms
          max-idle: 20
          min-idle: 5
          time-between-eviction-runs: 30000ms
          min-evictable-idle-time-millis: 60000ms
        shutdown-timeout: 100ms

      # 超时配置
      timeout: 10000ms
      connect-timeout: 10000ms

      # 客户端名称
      client-name: gateway-service-redis-client

      # 序列化配置 - Spring Boot 3.x 格式
      serialization:
        key-serializer: org.springframework.data.redis.serializer.StringRedisSerializer
        value-serializer: org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer

  # Spring Cache配置
  cache:
    type: redis
    redis:
      time-to-live: 1800000  # 30分钟
      cache-null-values: false
      key-prefix: "gateway:"
      use-key-prefix: true

# Sentinel配置
spring.cloud.sentinel:
  transport:
    dashboard: localhost:8858
    port: 8719
  filter:
    enabled: true
  # 网关流控配置
  scg:
    fallback:
      mode: response
      response-body: '{"code": 429, "message": "系统繁忙，请稍后再试"}'
      response-status: 429
  datasource:
    ds1:
      nacos:
        server-addr: localhost:8848
        dataId: sentinel-gateway-service-flow-rules.json
        rule-type: flow
    ds2:
      nacos:
        server-addr: localhost:8848
        dataId: sentinel-gateway-service-degrade-rules.json
        rule-type: degrade

# 暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# JWT配置
cex:
  jwt:
    enabled: true
    secret: your-jwt-secret-key-at-least-32-bytes-long-for-security
    expiration: 86400000  # 24小时过期时间
    refresh-expiration: 604800000  # 7天刷新token过期时间
    issuer: PPCEX

# 网关配置
gateway:
  security:
    # 免认证路径 - 对应GatewayConfig.Security.permitAll
    permit-all:
      - /doc.html
      - /doc.html/**
      - /swagger-ui/**
      - /swagger-resources/**
      - /v3/api-docs/**
      - /v3/api-docs/swagger-config
      - /webjars/**
      - /actuator/**
      - /api/v1/gateway/health
      # OpenAPI文档路径 - Knife4j发现的路径
      - /api/v1/user/v3/api-docs/**
      - /api/v1/trade/v3/api-docs/**
      - /api/v1/wallet/v3/api-docs/**
      - /api/v1/finance/v3/api-docs/**
      - /api/v1/market/v3/api-docs/**
      - /api/v1/risk/v3/api-docs/**
      - /api/v1/notify/v3/api-docs/**
      - /api/v1/match/v3/api-docs/**
      # 直接服务名称的OpenAPI路径
      - /user-service/v3/api-docs/**
      - /trade-service/v3/api-docs/**
      - /wallet-service/v3/api-docs/**
      - /finance-service/v3/api-docs/**
      - /market-service/v3/api-docs/**
      - /risk-service/v3/api-docs/**
      - /notify-service/v3/api-docs/**
      - /match-service/v3/api-docs/**
    # IP白名单 - 对应GatewayConfig.Security.ipWhitelist
    ip-whitelist:
      - 127.0.0.1
      - 0:0:0:0:0:0:0:1
      - 192.168.0.0/16
      - 10.0.0.0/8

  # 限流配置 - 对应GatewayConfig.RateLimit
  rate-limit:
    # 默认限流配置
    default-replenish-rate: 100    # 令牌填充速率（令牌/秒）
    default-burst-capacity: 200   # 令牌桶容量
    # 用户限流配置
    user-replenish-rate: 50       # 用户令牌填充速率
    user-burst-capacity: 100      # 用户令牌桶容量
    # IP限流配置
    ip-replenish-rate: 200        # IP令牌填充速率
    ip-burst-capacity: 400        # IP令牌桶容量

  # 缓存配置 - 对应GatewayConfig.Cache
  cache:
    auth-ttl: 3600         # 认证缓存TTL（秒）- 1小时
    route-ttl: 1800       # 路由缓存TTL（秒）- 30分钟
    rate-limit-ttl: 300   # 限流缓存TTL（秒）- 5分钟


knife4j:
  # 开启增强配置
  enable: true
  # 开启Swagger文档聚合
  gateway:
    # 开启网关聚合
    enabled: true
    # 网关聚合策略
    strategy: discover
    # 服务发现类型
    discover:
      # 开启服务发现
      enabled: true
      # 版本号
      version: OpenAPI3
    # 聚合排序
    routes:
      # 排序值，数值越小优先级越高
      order: 1
    # 文档聚合配置
    aggregate:
      # 是否启用聚合
      enabled: true
      # 聚合模式
      mode: service
      # 文档标题
      title: PPCEX API 文档
      # 文档描述
      description: PPCEX 微服务API文档聚合中心

# 日志配置
logging:
  level:
    root: info
    '[com.ppcex.gateway]': debug
    '[org.springframework.cloud.gateway]': debug
    '[org.springframework.cloud.gateway.route]': info
    '[org.springframework.cloud.gateway.handler]': info
    '[reactor.netty]': info
    '[com.github.xiaoymin.knife4j]': debug
    '[com.ppcex.gateway.filter]': debug
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/gateway-service.log
    max-size: 100MB
    max-history: 30