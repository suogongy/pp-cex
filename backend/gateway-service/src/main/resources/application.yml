server:
  port: 9000
  servlet:
    context-path: /

spring:
  application:
    name: gateway-service
  profiles:
    active: test
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
    banner-mode: "off"
  config:
    import: "optional:nacos:dummy-config.yml"
  cloud:
    nacos:
      config:
        enabled: true
        import-check:
          enabled: false
      discovery:
        enabled: true
        server-addr: localhost:8848
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # 用户服务路由
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user/api/v1/user/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=1

        # 交易服务路由
        - id: trade-service
          uri: lb://trade-service
          predicates:
            - Path=/api/v1/trade/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 钱包服务路由
        - id: wallet-service
          uri: lb://wallet-service
          predicates:
            - Path=/api/v1/wallet/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 财务服务路由
        - id: finance-service
          uri: lb://finance-service
          predicates:
            - Path=/api/v1/finance/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 行情服务路由
        - id: market-service
          uri: lb://market-service
          predicates:
            - Path=/api/v1/market/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 风控服务路由
        - id: risk-service
          uri: lb://risk-service
          predicates:
            - Path=/api/v1/risk/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 通知服务路由
        - id: notify-service
          uri: lb://notify-service
          predicates:
            - Path=/api/v1/notify/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

        # 撮合服务路由
        - id: match-service
          uri: lb://match-service
          predicates:
            - Path=/api/v1/match/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=2

      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns:
              - "http://localhost:*"
              - "http://127.0.0.1:*"
              - "http://localhost:3000"
              - "http://127.0.0.1:3000"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true

    # 负载均衡配置
    loadbalancer:
      ribbon:
        enabled: false

    # 监控配置
    zipkin:
      base-url: http://localhost:9411
      sender:
        type: web
    sleuth:
      sampler:
        probability: 1.0

    # Redis配置
    data:
      redis:
        # 连接配置
        host: localhost
        port: 6379
        password: "redis123456"
        database: 1
        username: "cex_user"

        # 连接池配置
        lettuce:
          pool:
            max-active: 200
            max-wait: -1ms
            max-idle: 20
            min-idle: 5
            time-between-eviction-runs: 30000ms
            min-evictable-idle-time: 60000ms
          shutdown-timeout: 100ms

        # 超时配置
        timeout: 10000ms
        connect-timeout: 10000ms
        read-timeout: 10000ms

        # 客户端名称
        client-name: gateway-service-redis-client

        # 序列化配置
        serialization:
          key-serializer: org.springframework.data.redis.serializer.StringRedisSerializer
          value-serializer: org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer

    # Spring Cache配置
    cache:
      type: redis
      redis:
        time-to-live: 1800000  # 30分钟
        cache-null-values: false
        key-prefix: "gateway:"
        use-key-prefix: true

# Sentinel配置
spring.cloud.sentinel:
  transport:
    dashboard: sentinel:8080
    port: 8719
  filter:
    enabled: true
  # 网关流控配置
  scg:
    fallback:
      mode: response
      response-body: '{"code": 429, "message": "系统繁忙，请稍后再试"}'
      response-status: 429
  datasource:
    ds1:
      nacos:
        server-addr: localhost:8848
        dataId: gateway-service-flow-rules
        groupId: gateway-service
        rule-type: flow
    ds2:
      nacos:
        server-addr: localhost:8848
        dataId: gateway-service-degrade-rules
        groupId: gateway-service
        rule-type: degrade

# 暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,redis
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# JWT配置
jwt:
  secret: mySecretKey123456789
  expiration: 86400000
  refresh-expiration: 604800000

# 网关配置
gateway:
  security:
    # 免认证路径
    permit-all:
      - /api/v1/auth/**
      - /api/v1/user/info
      - /actuator/**
      - /api/v1/market/**
      - /fallback/**
      - /doc.html
      - /v3/api-docs/**
    # IP白名单
    ip-whitelist:
      - 127.0.0.1
      - 192.168.1.0/24
  # 限流配置
  rate-limit:
    default-replenish-rate: 100
    default-burst-capacity: 200
    user-replenish-rate: 50
    user-burst-capacity: 100
    ip-replenish-rate: 200
    ip-burst-capacity: 400
  # 缓存配置
  cache:
    auth-ttl: 1800 # 30分钟
    route-ttl: 300  # 5分钟
    rate-limit-ttl: 60 # 1分钟

# 日志配置
logging:
  level:
    root: INFO
    com.ppcex.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/gateway-service.log
    max-size: 100MB
    max-history: 30

# Knife4j配置
knife4j:
  enable: true
  openapi:
    title: PPCEX Gateway API
    description: "PPCEX网关服务API文档"
    email: admin@ppcex.com
    concat: PPCEX Team
    url: https://www.ppcex.com
    version: v1.0
    license: Apache 2.0
    license-url: https://www.apache.org/licenses/LICENSE-2.0
    terms-of-service-url: https://www.ppcex.com/terms
  setting:
    language: zh_cn
    enable-version: true
    enable-swagger-models: true
    swagger-model-name: 实体类列表