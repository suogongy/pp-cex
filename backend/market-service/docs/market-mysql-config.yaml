# =================================================================
# MySQL配置 - MySQL Configuration (Nacos版本)
# 服务名称: market-service
# 配置组: market-service
# 适用于: MySQL数据库连接和配置
# =================================================================

spring:
  # 数据源配置
  datasource:
    # 主数据库配置
    master:
      url: jdbc:mysql://localhost:3306/market_db?useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      username: root
      password: password
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        pool-name: MarketMasterPool
        maximum-pool-size: 30  # 最大连接数
        minimum-idle: 10     # 最小空闲连接数
        connection-timeout: 30000  # 连接超时时间（毫秒）
        idle-timeout: 600000  # 空闲连接超时时间（毫秒）
        max-lifetime: 1800000  # 连接最大生命周期（毫秒）
        leak-detection-threshold: 60000  # 连接泄漏检测阈值（毫秒）
        validation-timeout: 5000  # 验证超时时间（毫秒）
        connection-test-query: SELECT 1  # 连接测试查询

    # 从数据库配置（读写分离）
    slave:
      url: jdbc:mysql://localhost:3306/market_db?useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      username: root
      password: password
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        pool-name: MarketSlavePool
        maximum-pool-size: 50  # 最大连接数
        minimum-idle: 15     # 最小空闲连接数
        connection-timeout: 30000  # 连接超时时间（毫秒）
        idle-timeout: 600000  # 空闲连接超时时间（毫秒）
        max-lifetime: 1800000  # 连接最大生命周期（毫秒）
        leak-detection-threshold: 60000  # 连接泄漏检测阈值（毫秒）
        validation-timeout: 5000  # 验证超时时间（毫秒）
        connection-test-query: SELECT 1  # 连接测试查询

  # 数据库迁移配置 (Flyway)
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: true  # 禁用flyway:clean
    table: flyway_schema_history
    baseline-version: 001
    placeholders:
      env: ${spring.profiles.active}

# MyBatis Plus 配置
mybatis-plus:
  configuration:
    # 驼峰命名转换
    map-underscore-to-camel-case: true
    # 延迟加载
    lazy-loading-enabled: true
    # 多个结果集返回
    multiple-result-sets-enabled: true
    # 使用列别名
    use-column-label: true
    # 使用生成的键
    use-generated-keys: true
    # 缓存配置
    cache-enabled: true
    local-cache-scope: statement
    # 日志实现
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
  global-config:
    # 数据库配置
    db-config:
      # 主键类型
      id-type: auto
      # 表名前缀
      table-prefix: market_
      # 逻辑删除配置
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
      # 字段策略
      insert-strategy: not_null
      update-strategy: not_null
      select-strategy: not_null
    # 打印banner
    banner: false
  # 扫描mapper.xml文件
  mapper-locations: classpath:mapper/*.xml
  # 扫描实体类
  type-aliases-package: com.ppcex.market.entity

# 数据库性能监控
druid:
  enabled: false  # 如果需要启用Druid监控，请设置为true
  stat-view-servlet:
    enabled: true
    url-pattern: /druid/*
    login-username: admin
    login-password: admin
    reset-enable: false
  web-stat-filter:
    enabled: true
    url-pattern: /*
    exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"

# 数据库分库分表配置（如果需要）
# sharding:
#   jdbc:
#     datasource:
#       names: ds0,ds1
#       ds0:
#         type: com.zaxxer.hikari.HikariDataSource
#         driver-class-name: com.mysql.cj.jdbc.Driver
#         jdbc-url: jdbc:mysql://localhost:3306/market_db_0?...
#         username: root
#         password: password
#       ds1:
#         type: com.zaxxer.hikari.HikariDataSource
#         driver-class-name: com.mysql.cj.jdbc.Driver
#         jdbc-url: jdbc:mysql://localhost:3306/market_db_1?...
#         username: root
#         password: password
#     rules:
#       sharding:
#         tables:
#           market_kline:
#             actual-data-nodes: ds$->{0..1}.market_kline_$->{2020..2030}
#             table-strategy:
#               standard:
#                 sharding-column: create_time
#                 sharding-algorithm-name: table-sharding
#           market_trade:
#             actual-data-nodes: ds$->{0..1}.market_trade
#             database-strategy:
#               standard:
#                 sharding-column: id
#                 sharding-algorithm-name: database-sharding

# 数据库读写分离配置
# master-slave:
#   load-balance-algorithm-type: round_robin
#   name: ds_master_slave
#   master-data-source-name: ds_master
#   slave-data-source-names: ds_slave_0,ds_slave_1

# 数据库数据清理配置
market:
  database:
    cleanup:
      enabled: true
      # 行情数据清理
      ticker:
        retention-days: 90  # 保留90天
        cleanup-cron: "0 2 * * *"  # 每天凌晨2点清理
      # K线数据清理
      kline:
        retention-days: 180  # 保留180天
        cleanup-cron: "0 3 * * 0"  # 每周日凌晨3点清理
      # 成交数据清理
      trade:
        retention-days: 30  # 保留30天
        cleanup-cron: "0 4 * * *"  # 每天凌晨4点清理
      # 深度数据清理
      depth:
        retention-hours: 24  # 保留24小时
        cleanup-cron: "0 0 * * *"  # 每小时清理

# 环境特定配置注释
# =================================================================
# 开发环境 (mysql-config-dev.yaml):
# - spring.datasource.master.url: jdbc:mysql://localhost:3306/market_db_dev?...
# - spring.datasource.master.username: dev_user
# - spring.datasource.master.password: dev_password
# - mybatis-plus.configuration.log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#
# 测试环境 (mysql-config-test.yaml):
# - spring.datasource.master.url: jdbc:mysql://test-db:3306/market_db_test?...
# - spring.datasource.master.username: test_user
# - spring.datasource.master.password: test_password
# - spring.datasource.master.hikari.maximum-pool-size: 20
#
# 生产环境 (mysql-config-prod.yaml):
# - spring.datasource.master.url: jdbc:mysql://prod-db-master:3306/market_db_prod?...
# - spring.datasource.slave.url: jdbc:mysql://prod-db-slave:3306/market_db_prod?...
# - spring.datasource.master.username: prod_user
# - spring.datasource.master.password: prod_password
# - spring.datasource.master.hikari.maximum-pool-size: 50
# - spring.datasource.slave.hikari.maximum-pool-size: 100
# =================================================================